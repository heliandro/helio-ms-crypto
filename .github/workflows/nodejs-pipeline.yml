name: Nodejs Pipeline
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do projeto
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 20.5.1

      - name: Instala as dependências
        run: npm install

      - name: Build da aplicação
        run: npm run build

  tests:
    needs: build
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Checkout do projeto
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 20.5.1

      - name: Instala as dependências
        run: npm install

      - name: Executa os testes com coverage
        run: npm run test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Checkout do projecto
        uses: actions/checkout@v3

      - name: Determinar Tipo de Versão (Major, Minor, ou Patch)
        id: determine_version_type
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | awk -F/ '{print $3}')
          if [[ $BRANCH_NAME == "bugfix"* ]]; then
            echo "version_type=patch" >> $GITHUB_OUTPUT
          elif [[ $BRANCH_NAME == "feature"* ]]; then
            echo "version_type=minor" >> $GITHUB_OUTPUT
          else
            echo "version_type=major" >> $GITHUB_OUTPUT
          fi

